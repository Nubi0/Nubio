plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.3'
	id 'io.spring.dependency-management' version '1.1.3'
}

group = 'com'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2022.0.4")
}

dependencies {
	// spring data jpa
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	// spring web
	implementation 'org.springframework.boot:spring-boot-starter-web'
	// spring validation
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	// lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'
	// spring test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	// h2 db
	runtimeOnly 'com.h2database:h2'
	// swagger
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'
	// spring-cloud-starter-aws
	implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'
	// spring feign
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
	// mysql db
	runtimeOnly 'com.mysql:mysql-connector-j'
	//mongodb
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	// querydsl
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"
	// OpenCsv
	implementation 'com.opencsv:opencsv:5.5'
	// elasticSearch
	implementation 'org.springframework.data:spring-data-elasticsearch:4.1.15'
	implementation 'org.elasticsearch.client:transport:7.14.0'
	implementation 'org.elasticsearch:elasticsearch:7.14.0'
	// RestHighLevelClient
	implementation 'org.elasticsearch.client:elasticsearch-rest-high-level-client:7.14.0'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}


tasks.named('test') {
	useJUnitPlatform()
}
